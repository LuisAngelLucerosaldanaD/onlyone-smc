// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: transactions.proto

package transactions_proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RequestCreateTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From   string  `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To     string  `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Amount float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	TypeId int32   `protobuf:"varint,4,opt,name=typeId,proto3" json:"typeId,omitempty"`
	Data   *Data   `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RequestCreateTransaction) Reset() {
	*x = RequestCreateTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestCreateTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestCreateTransaction) ProtoMessage() {}

func (x *RequestCreateTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestCreateTransaction.ProtoReflect.Descriptor instead.
func (*RequestCreateTransaction) Descriptor() ([]byte, []int) {
	return file_transactions_proto_rawDescGZIP(), []int{0}
}

func (x *RequestCreateTransaction) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *RequestCreateTransaction) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *RequestCreateTransaction) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *RequestCreateTransaction) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *RequestCreateTransaction) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category       string        `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	IdentityNumber string        `protobuf:"bytes,2,opt,name=identityNumber,proto3" json:"identityNumber,omitempty"`
	Files          []*File       `protobuf:"bytes,3,rep,name=files,proto3" json:"files,omitempty"`
	Name           string        `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description    string        `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Identifiers    []*Identifier `protobuf:"bytes,6,rep,name=identifiers,proto3" json:"identifiers,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_transactions_proto_rawDescGZIP(), []int{1}
}

func (x *Data) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Data) GetIdentityNumber() string {
	if x != nil {
		return x.IdentityNumber
	}
	return ""
}

func (x *Data) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *Data) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Data) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Data) GetIdentifiers() []*Identifier {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdFile     int32  `protobuf:"varint,1,opt,name=id_file,json=idFile,proto3" json:"id_file,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	FileEncode string `protobuf:"bytes,3,opt,name=file_encode,json=fileEncode,proto3" json:"file_encode,omitempty"`
	NameAws    string `protobuf:"bytes,4,opt,name=name_aws,json=nameAws,proto3" json:"name_aws,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_transactions_proto_rawDescGZIP(), []int{2}
}

func (x *File) GetIdFile() int32 {
	if x != nil {
		return x.IdFile
	}
	return 0
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetFileEncode() string {
	if x != nil {
		return x.FileEncode
	}
	return ""
}

func (x *File) GetNameAws() string {
	if x != nil {
		return x.NameAws
	}
	return ""
}

type Identifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Attributes []*Attribute `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *Identifier) Reset() {
	*x = Identifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identifier) ProtoMessage() {}

func (x *Identifier) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identifier.ProtoReflect.Descriptor instead.
func (*Identifier) Descriptor() ([]byte, []int) {
	return file_transactions_proto_rawDescGZIP(), []int{3}
}

func (x *Identifier) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Identifier) GetAttributes() []*Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type Attribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Attribute) Reset() {
	*x = Attribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute) ProtoMessage() {}

func (x *Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute.ProtoReflect.Descriptor instead.
func (*Attribute) Descriptor() ([]byte, []int) {
	return file_transactions_proto_rawDescGZIP(), []int{4}
}

func (x *Attribute) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Attribute) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Attribute) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ResponseCreateTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error bool         `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  *Transaction `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Code  int32        `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Type  int32        `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Msg   string       `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResponseCreateTransaction) Reset() {
	*x = ResponseCreateTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseCreateTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseCreateTransaction) ProtoMessage() {}

func (x *ResponseCreateTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseCreateTransaction.ProtoReflect.Descriptor instead.
func (*ResponseCreateTransaction) Descriptor() ([]byte, []int) {
	return file_transactions_proto_rawDescGZIP(), []int{5}
}

func (x *ResponseCreateTransaction) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ResponseCreateTransaction) GetData() *Transaction {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ResponseCreateTransaction) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResponseCreateTransaction) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ResponseCreateTransaction) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	From      string  `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To        string  `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Amount    float64 `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	TypeId    int32   `protobuf:"varint,5,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Data      string  `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	Block     int64   `protobuf:"varint,7,opt,name=block,proto3" json:"block,omitempty"`
	CreatedAt string  `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt string  `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_transactions_proto_rawDescGZIP(), []int{6}
}

func (x *Transaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Transaction) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Transaction) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Transaction) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Transaction) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *Transaction) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *Transaction) GetBlock() int64 {
	if x != nil {
		return x.Block
	}
	return 0
}

func (x *Transaction) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Transaction) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetTransactionByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BlockId int64  `protobuf:"varint,2,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
}

func (x *GetTransactionByIdRequest) Reset() {
	*x = GetTransactionByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionByIdRequest) ProtoMessage() {}

func (x *GetTransactionByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionByIdRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionByIdRequest) Descriptor() ([]byte, []int) {
	return file_transactions_proto_rawDescGZIP(), []int{7}
}

func (x *GetTransactionByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetTransactionByIdRequest) GetBlockId() int64 {
	if x != nil {
		return x.BlockId
	}
	return 0
}

type ResponseGetTransactionById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error bool         `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  *Transaction `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Code  int32        `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Type  int32        `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Msg   string       `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResponseGetTransactionById) Reset() {
	*x = ResponseGetTransactionById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetTransactionById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetTransactionById) ProtoMessage() {}

func (x *ResponseGetTransactionById) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetTransactionById.ProtoReflect.Descriptor instead.
func (*ResponseGetTransactionById) Descriptor() ([]byte, []int) {
	return file_transactions_proto_rawDescGZIP(), []int{8}
}

func (x *ResponseGetTransactionById) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ResponseGetTransactionById) GetData() *Transaction {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ResponseGetTransactionById) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResponseGetTransactionById) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ResponseGetTransactionById) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type JwtTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string  `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Block         int64   `protobuf:"varint,2,opt,name=block,proto3" json:"block,omitempty"`
	From          string  `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To            string  `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Verify        string  `protobuf:"bytes,5,opt,name=verify,proto3" json:"verify,omitempty"`
	Ttl           int32   `protobuf:"varint,6,opt,name=ttl,proto3" json:"ttl,omitempty"`
	AttributesId  []int32 `protobuf:"varint,7,rep,packed,name=attributes_id,json=attributesId,proto3" json:"attributes_id,omitempty"`
	FilesId       []int32 `protobuf:"varint,8,rep,packed,name=files_id,json=filesId,proto3" json:"files_id,omitempty"`
}

func (x *JwtTransactionRequest) Reset() {
	*x = JwtTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JwtTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JwtTransactionRequest) ProtoMessage() {}

func (x *JwtTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JwtTransactionRequest.ProtoReflect.Descriptor instead.
func (*JwtTransactionRequest) Descriptor() ([]byte, []int) {
	return file_transactions_proto_rawDescGZIP(), []int{9}
}

func (x *JwtTransactionRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *JwtTransactionRequest) GetBlock() int64 {
	if x != nil {
		return x.Block
	}
	return 0
}

func (x *JwtTransactionRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *JwtTransactionRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *JwtTransactionRequest) GetVerify() string {
	if x != nil {
		return x.Verify
	}
	return ""
}

func (x *JwtTransactionRequest) GetTtl() int32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *JwtTransactionRequest) GetAttributesId() []int32 {
	if x != nil {
		return x.AttributesId
	}
	return nil
}

func (x *JwtTransactionRequest) GetFilesId() []int32 {
	if x != nil {
		return x.FilesId
	}
	return nil
}

type ResponseJwtTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Code  int32  `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Type  int32  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Msg   string `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResponseJwtTransaction) Reset() {
	*x = ResponseJwtTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseJwtTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseJwtTransaction) ProtoMessage() {}

func (x *ResponseJwtTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseJwtTransaction.ProtoReflect.Descriptor instead.
func (*ResponseJwtTransaction) Descriptor() ([]byte, []int) {
	return file_transactions_proto_rawDescGZIP(), []int{10}
}

func (x *ResponseJwtTransaction) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ResponseJwtTransaction) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *ResponseJwtTransaction) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResponseJwtTransaction) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ResponseJwtTransaction) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetAllTransactionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit   int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset  int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	BlockId int64 `protobuf:"varint,3,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
}

func (x *GetAllTransactionsRequest) Reset() {
	*x = GetAllTransactionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTransactionsRequest) ProtoMessage() {}

func (x *GetAllTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTransactionsRequest.ProtoReflect.Descriptor instead.
func (*GetAllTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_transactions_proto_rawDescGZIP(), []int{11}
}

func (x *GetAllTransactionsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAllTransactionsRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAllTransactionsRequest) GetBlockId() int64 {
	if x != nil {
		return x.BlockId
	}
	return 0
}

type ResponseGetAllTransactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error bool           `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  []*Transaction `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	Code  int32          `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Type  int32          `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Msg   string         `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResponseGetAllTransactions) Reset() {
	*x = ResponseGetAllTransactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetAllTransactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetAllTransactions) ProtoMessage() {}

func (x *ResponseGetAllTransactions) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetAllTransactions.ProtoReflect.Descriptor instead.
func (*ResponseGetAllTransactions) Descriptor() ([]byte, []int) {
	return file_transactions_proto_rawDescGZIP(), []int{12}
}

func (x *ResponseGetAllTransactions) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ResponseGetAllTransactions) GetData() []*Transaction {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ResponseGetAllTransactions) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResponseGetAllTransactions) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ResponseGetAllTransactions) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetFilesByTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
}

func (x *GetFilesByTransactionRequest) Reset() {
	*x = GetFilesByTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFilesByTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFilesByTransactionRequest) ProtoMessage() {}

func (x *GetFilesByTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFilesByTransactionRequest.ProtoReflect.Descriptor instead.
func (*GetFilesByTransactionRequest) Descriptor() ([]byte, []int) {
	return file_transactions_proto_rawDescGZIP(), []int{13}
}

func (x *GetFilesByTransactionRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type ResponseGetFilesByTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error bool             `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  []*FilesResponse `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	Code  int32            `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Type  int32            `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Msg   string           `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResponseGetFilesByTransaction) Reset() {
	*x = ResponseGetFilesByTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetFilesByTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetFilesByTransaction) ProtoMessage() {}

func (x *ResponseGetFilesByTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetFilesByTransaction.ProtoReflect.Descriptor instead.
func (*ResponseGetFilesByTransaction) Descriptor() ([]byte, []int) {
	return file_transactions_proto_rawDescGZIP(), []int{14}
}

func (x *ResponseGetFilesByTransaction) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ResponseGetFilesByTransaction) GetData() []*FilesResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ResponseGetFilesByTransaction) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResponseGetFilesByTransaction) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ResponseGetFilesByTransaction) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type FilesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameDocument string `protobuf:"bytes,1,opt,name=name_document,json=nameDocument,proto3" json:"name_document,omitempty"`
	Encoding     string `protobuf:"bytes,2,opt,name=encoding,proto3" json:"encoding,omitempty"`
	FileId       int32  `protobuf:"varint,3,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
}

func (x *FilesResponse) Reset() {
	*x = FilesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesResponse) ProtoMessage() {}

func (x *FilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesResponse.ProtoReflect.Descriptor instead.
func (*FilesResponse) Descriptor() ([]byte, []int) {
	return file_transactions_proto_rawDescGZIP(), []int{15}
}

func (x *FilesResponse) GetNameDocument() string {
	if x != nil {
		return x.NameDocument
	}
	return ""
}

func (x *FilesResponse) GetEncoding() string {
	if x != nil {
		return x.Encoding
	}
	return ""
}

func (x *FilesResponse) GetFileId() int32 {
	if x != nil {
		return x.FileId
	}
	return 0
}

type RqGetTransactionByBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockId int64 `protobuf:"varint,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
}

func (x *RqGetTransactionByBlock) Reset() {
	*x = RqGetTransactionByBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RqGetTransactionByBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RqGetTransactionByBlock) ProtoMessage() {}

func (x *RqGetTransactionByBlock) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RqGetTransactionByBlock.ProtoReflect.Descriptor instead.
func (*RqGetTransactionByBlock) Descriptor() ([]byte, []int) {
	return file_transactions_proto_rawDescGZIP(), []int{16}
}

func (x *RqGetTransactionByBlock) GetBlockId() int64 {
	if x != nil {
		return x.BlockId
	}
	return 0
}

type ResponseGetTransactionByBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error bool           `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  []*Transaction `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	Code  int32          `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Type  int32          `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Msg   string         `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResponseGetTransactionByBlock) Reset() {
	*x = ResponseGetTransactionByBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetTransactionByBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetTransactionByBlock) ProtoMessage() {}

func (x *ResponseGetTransactionByBlock) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetTransactionByBlock.ProtoReflect.Descriptor instead.
func (*ResponseGetTransactionByBlock) Descriptor() ([]byte, []int) {
	return file_transactions_proto_rawDescGZIP(), []int{17}
}

func (x *ResponseGetTransactionByBlock) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ResponseGetTransactionByBlock) GetData() []*Transaction {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ResponseGetTransactionByBlock) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResponseGetTransactionByBlock) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ResponseGetTransactionByBlock) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RqCreateTransactionBySystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletFrom string  `protobuf:"bytes,1,opt,name=wallet_from,json=walletFrom,proto3" json:"wallet_from,omitempty"`
	WalletTo   string  `protobuf:"bytes,2,opt,name=wallet_to,json=walletTo,proto3" json:"wallet_to,omitempty"`
	Amount     float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	TypeId     int32   `protobuf:"varint,4,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Data       string  `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	BlockId    int64   `protobuf:"varint,6,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
}

func (x *RqCreateTransactionBySystem) Reset() {
	*x = RqCreateTransactionBySystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RqCreateTransactionBySystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RqCreateTransactionBySystem) ProtoMessage() {}

func (x *RqCreateTransactionBySystem) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RqCreateTransactionBySystem.ProtoReflect.Descriptor instead.
func (*RqCreateTransactionBySystem) Descriptor() ([]byte, []int) {
	return file_transactions_proto_rawDescGZIP(), []int{18}
}

func (x *RqCreateTransactionBySystem) GetWalletFrom() string {
	if x != nil {
		return x.WalletFrom
	}
	return ""
}

func (x *RqCreateTransactionBySystem) GetWalletTo() string {
	if x != nil {
		return x.WalletTo
	}
	return ""
}

func (x *RqCreateTransactionBySystem) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *RqCreateTransactionBySystem) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *RqCreateTransactionBySystem) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *RqCreateTransactionBySystem) GetBlockId() int64 {
	if x != nil {
		return x.BlockId
	}
	return 0
}

type ResCreateTransactionBySystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error bool         `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  *Transaction `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Code  int32        `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Type  int32        `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Msg   string       `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResCreateTransactionBySystem) Reset() {
	*x = ResCreateTransactionBySystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateTransactionBySystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateTransactionBySystem) ProtoMessage() {}

func (x *ResCreateTransactionBySystem) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateTransactionBySystem.ProtoReflect.Descriptor instead.
func (*ResCreateTransactionBySystem) Descriptor() ([]byte, []int) {
	return file_transactions_proto_rawDescGZIP(), []int{19}
}

func (x *ResCreateTransactionBySystem) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ResCreateTransactionBySystem) GetData() *Transaction {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ResCreateTransactionBySystem) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResCreateTransactionBySystem) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ResCreateTransactionBySystem) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_transactions_proto protoreflect.FileDescriptor

var file_transactions_proto_rawDesc = []byte{
	0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9c, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf2, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x0e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0b, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52,
	0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x22, 0x6f, 0x0a, 0x04,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x77, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x61, 0x6d, 0x65, 0x41, 0x77, 0x73, 0x22, 0x5f, 0x0a,
	0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x3d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x45,
	0x0a, 0x09, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa0, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xda, 0x01, 0x0a, 0x0b, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x46, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x22, 0xa1, 0x01,
	0x0a, 0x1a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x22, 0xe2, 0x01, 0x0a, 0x15, 0x4a, 0x77, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0c, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x49, 0x64, 0x22, 0x7c, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4a, 0x77, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0x64, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x1a, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x45,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xa6, 0x01, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x35, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x69,
	0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x17, 0x52, 0x71, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x22,
	0xa4, 0x01, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xbb, 0x01, 0x0a, 0x1b, 0x52, 0x71, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x54, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x64, 0x22, 0xa3, 0x01, 0x0a, 0x1c, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x32, 0xe5, 0x06, 0x0a, 0x14, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x12, 0x72, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x2d, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2d, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x22, 0x00, 0x12, 0x6c,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x4a, 0x57, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4a, 0x77, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4a, 0x77, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x2d, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x42, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x00, 0x12, 0x7c, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x2b, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x71, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x1a, 0x31, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x00, 0x12,
	0x80, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x2f, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x1a, 0x30,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x22, 0x00, 0x42, 0x16, 0x5a, 0x14, 0x2e, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_transactions_proto_rawDescOnce sync.Once
	file_transactions_proto_rawDescData = file_transactions_proto_rawDesc
)

func file_transactions_proto_rawDescGZIP() []byte {
	file_transactions_proto_rawDescOnce.Do(func() {
		file_transactions_proto_rawDescData = protoimpl.X.CompressGZIP(file_transactions_proto_rawDescData)
	})
	return file_transactions_proto_rawDescData
}

var file_transactions_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_transactions_proto_goTypes = []interface{}{
	(*RequestCreateTransaction)(nil),      // 0: transactions_proto.RequestCreateTransaction
	(*Data)(nil),                          // 1: transactions_proto.Data
	(*File)(nil),                          // 2: transactions_proto.File
	(*Identifier)(nil),                    // 3: transactions_proto.Identifier
	(*Attribute)(nil),                     // 4: transactions_proto.Attribute
	(*ResponseCreateTransaction)(nil),     // 5: transactions_proto.ResponseCreateTransaction
	(*Transaction)(nil),                   // 6: transactions_proto.Transaction
	(*GetTransactionByIdRequest)(nil),     // 7: transactions_proto.GetTransactionByIdRequest
	(*ResponseGetTransactionById)(nil),    // 8: transactions_proto.ResponseGetTransactionById
	(*JwtTransactionRequest)(nil),         // 9: transactions_proto.JwtTransactionRequest
	(*ResponseJwtTransaction)(nil),        // 10: transactions_proto.ResponseJwtTransaction
	(*GetAllTransactionsRequest)(nil),     // 11: transactions_proto.GetAllTransactionsRequest
	(*ResponseGetAllTransactions)(nil),    // 12: transactions_proto.ResponseGetAllTransactions
	(*GetFilesByTransactionRequest)(nil),  // 13: transactions_proto.GetFilesByTransactionRequest
	(*ResponseGetFilesByTransaction)(nil), // 14: transactions_proto.ResponseGetFilesByTransaction
	(*FilesResponse)(nil),                 // 15: transactions_proto.FilesResponse
	(*RqGetTransactionByBlock)(nil),       // 16: transactions_proto.RqGetTransactionByBlock
	(*ResponseGetTransactionByBlock)(nil), // 17: transactions_proto.ResponseGetTransactionByBlock
	(*RqCreateTransactionBySystem)(nil),   // 18: transactions_proto.RqCreateTransactionBySystem
	(*ResCreateTransactionBySystem)(nil),  // 19: transactions_proto.ResCreateTransactionBySystem
}
var file_transactions_proto_depIdxs = []int32{
	1,  // 0: transactions_proto.RequestCreateTransaction.data:type_name -> transactions_proto.Data
	2,  // 1: transactions_proto.Data.files:type_name -> transactions_proto.File
	3,  // 2: transactions_proto.Data.identifiers:type_name -> transactions_proto.Identifier
	4,  // 3: transactions_proto.Identifier.attributes:type_name -> transactions_proto.Attribute
	6,  // 4: transactions_proto.ResponseCreateTransaction.data:type_name -> transactions_proto.Transaction
	6,  // 5: transactions_proto.ResponseGetTransactionById.data:type_name -> transactions_proto.Transaction
	6,  // 6: transactions_proto.ResponseGetAllTransactions.data:type_name -> transactions_proto.Transaction
	15, // 7: transactions_proto.ResponseGetFilesByTransaction.data:type_name -> transactions_proto.FilesResponse
	6,  // 8: transactions_proto.ResponseGetTransactionByBlock.data:type_name -> transactions_proto.Transaction
	6,  // 9: transactions_proto.ResCreateTransactionBySystem.data:type_name -> transactions_proto.Transaction
	0,  // 10: transactions_proto.transactionsServices.CreateTransaction:input_type -> transactions_proto.RequestCreateTransaction
	7,  // 11: transactions_proto.transactionsServices.GetTransactionByID:input_type -> transactions_proto.GetTransactionByIdRequest
	9,  // 12: transactions_proto.transactionsServices.GetJWTTransaction:input_type -> transactions_proto.JwtTransactionRequest
	11, // 13: transactions_proto.transactionsServices.GetAllTransactions:input_type -> transactions_proto.GetAllTransactionsRequest
	13, // 14: transactions_proto.transactionsServices.GetFilesTransaction:input_type -> transactions_proto.GetFilesByTransactionRequest
	16, // 15: transactions_proto.transactionsServices.GetTransactionsByBlockId:input_type -> transactions_proto.RqGetTransactionByBlock
	18, // 16: transactions_proto.transactionsServices.CreateTransactionBySystem:input_type -> transactions_proto.RqCreateTransactionBySystem
	5,  // 17: transactions_proto.transactionsServices.CreateTransaction:output_type -> transactions_proto.ResponseCreateTransaction
	8,  // 18: transactions_proto.transactionsServices.GetTransactionByID:output_type -> transactions_proto.ResponseGetTransactionById
	10, // 19: transactions_proto.transactionsServices.GetJWTTransaction:output_type -> transactions_proto.ResponseJwtTransaction
	12, // 20: transactions_proto.transactionsServices.GetAllTransactions:output_type -> transactions_proto.ResponseGetAllTransactions
	14, // 21: transactions_proto.transactionsServices.GetFilesTransaction:output_type -> transactions_proto.ResponseGetFilesByTransaction
	17, // 22: transactions_proto.transactionsServices.GetTransactionsByBlockId:output_type -> transactions_proto.ResponseGetTransactionByBlock
	19, // 23: transactions_proto.transactionsServices.CreateTransactionBySystem:output_type -> transactions_proto.ResCreateTransactionBySystem
	17, // [17:24] is the sub-list for method output_type
	10, // [10:17] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_transactions_proto_init() }
func file_transactions_proto_init() {
	if File_transactions_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_transactions_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestCreateTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseCreateTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetTransactionById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JwtTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseJwtTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTransactionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetAllTransactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFilesByTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetFilesByTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RqGetTransactionByBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetTransactionByBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RqCreateTransactionBySystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateTransactionBySystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transactions_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_transactions_proto_goTypes,
		DependencyIndexes: file_transactions_proto_depIdxs,
		MessageInfos:      file_transactions_proto_msgTypes,
	}.Build()
	File_transactions_proto = out.File
	file_transactions_proto_rawDesc = nil
	file_transactions_proto_goTypes = nil
	file_transactions_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TransactionsServicesClient is the client API for TransactionsServices service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransactionsServicesClient interface {
	CreateTransaction(ctx context.Context, in *RequestCreateTransaction, opts ...grpc.CallOption) (*ResponseCreateTransaction, error)
	GetTransactionByID(ctx context.Context, in *GetTransactionByIdRequest, opts ...grpc.CallOption) (*ResponseGetTransactionById, error)
	GetJWTTransaction(ctx context.Context, in *JwtTransactionRequest, opts ...grpc.CallOption) (*ResponseJwtTransaction, error)
	GetAllTransactions(ctx context.Context, in *GetAllTransactionsRequest, opts ...grpc.CallOption) (*ResponseGetAllTransactions, error)
	GetFilesTransaction(ctx context.Context, in *GetFilesByTransactionRequest, opts ...grpc.CallOption) (*ResponseGetFilesByTransaction, error)
	GetTransactionsByBlockId(ctx context.Context, in *RqGetTransactionByBlock, opts ...grpc.CallOption) (*ResponseGetTransactionByBlock, error)
	CreateTransactionBySystem(ctx context.Context, in *RqCreateTransactionBySystem, opts ...grpc.CallOption) (*ResCreateTransactionBySystem, error)
}

type transactionsServicesClient struct {
	cc grpc.ClientConnInterface
}

func NewTransactionsServicesClient(cc grpc.ClientConnInterface) TransactionsServicesClient {
	return &transactionsServicesClient{cc}
}

func (c *transactionsServicesClient) CreateTransaction(ctx context.Context, in *RequestCreateTransaction, opts ...grpc.CallOption) (*ResponseCreateTransaction, error) {
	out := new(ResponseCreateTransaction)
	err := c.cc.Invoke(ctx, "/transactions_proto.transactionsServices/CreateTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionsServicesClient) GetTransactionByID(ctx context.Context, in *GetTransactionByIdRequest, opts ...grpc.CallOption) (*ResponseGetTransactionById, error) {
	out := new(ResponseGetTransactionById)
	err := c.cc.Invoke(ctx, "/transactions_proto.transactionsServices/GetTransactionByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionsServicesClient) GetJWTTransaction(ctx context.Context, in *JwtTransactionRequest, opts ...grpc.CallOption) (*ResponseJwtTransaction, error) {
	out := new(ResponseJwtTransaction)
	err := c.cc.Invoke(ctx, "/transactions_proto.transactionsServices/GetJWTTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionsServicesClient) GetAllTransactions(ctx context.Context, in *GetAllTransactionsRequest, opts ...grpc.CallOption) (*ResponseGetAllTransactions, error) {
	out := new(ResponseGetAllTransactions)
	err := c.cc.Invoke(ctx, "/transactions_proto.transactionsServices/GetAllTransactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionsServicesClient) GetFilesTransaction(ctx context.Context, in *GetFilesByTransactionRequest, opts ...grpc.CallOption) (*ResponseGetFilesByTransaction, error) {
	out := new(ResponseGetFilesByTransaction)
	err := c.cc.Invoke(ctx, "/transactions_proto.transactionsServices/GetFilesTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionsServicesClient) GetTransactionsByBlockId(ctx context.Context, in *RqGetTransactionByBlock, opts ...grpc.CallOption) (*ResponseGetTransactionByBlock, error) {
	out := new(ResponseGetTransactionByBlock)
	err := c.cc.Invoke(ctx, "/transactions_proto.transactionsServices/GetTransactionsByBlockId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionsServicesClient) CreateTransactionBySystem(ctx context.Context, in *RqCreateTransactionBySystem, opts ...grpc.CallOption) (*ResCreateTransactionBySystem, error) {
	out := new(ResCreateTransactionBySystem)
	err := c.cc.Invoke(ctx, "/transactions_proto.transactionsServices/CreateTransactionBySystem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransactionsServicesServer is the server API for TransactionsServices service.
type TransactionsServicesServer interface {
	CreateTransaction(context.Context, *RequestCreateTransaction) (*ResponseCreateTransaction, error)
	GetTransactionByID(context.Context, *GetTransactionByIdRequest) (*ResponseGetTransactionById, error)
	GetJWTTransaction(context.Context, *JwtTransactionRequest) (*ResponseJwtTransaction, error)
	GetAllTransactions(context.Context, *GetAllTransactionsRequest) (*ResponseGetAllTransactions, error)
	GetFilesTransaction(context.Context, *GetFilesByTransactionRequest) (*ResponseGetFilesByTransaction, error)
	GetTransactionsByBlockId(context.Context, *RqGetTransactionByBlock) (*ResponseGetTransactionByBlock, error)
	CreateTransactionBySystem(context.Context, *RqCreateTransactionBySystem) (*ResCreateTransactionBySystem, error)
}

// UnimplementedTransactionsServicesServer can be embedded to have forward compatible implementations.
type UnimplementedTransactionsServicesServer struct {
}

func (*UnimplementedTransactionsServicesServer) CreateTransaction(context.Context, *RequestCreateTransaction) (*ResponseCreateTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTransaction not implemented")
}
func (*UnimplementedTransactionsServicesServer) GetTransactionByID(context.Context, *GetTransactionByIdRequest) (*ResponseGetTransactionById, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransactionByID not implemented")
}
func (*UnimplementedTransactionsServicesServer) GetJWTTransaction(context.Context, *JwtTransactionRequest) (*ResponseJwtTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJWTTransaction not implemented")
}
func (*UnimplementedTransactionsServicesServer) GetAllTransactions(context.Context, *GetAllTransactionsRequest) (*ResponseGetAllTransactions, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllTransactions not implemented")
}
func (*UnimplementedTransactionsServicesServer) GetFilesTransaction(context.Context, *GetFilesByTransactionRequest) (*ResponseGetFilesByTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFilesTransaction not implemented")
}
func (*UnimplementedTransactionsServicesServer) GetTransactionsByBlockId(context.Context, *RqGetTransactionByBlock) (*ResponseGetTransactionByBlock, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransactionsByBlockId not implemented")
}
func (*UnimplementedTransactionsServicesServer) CreateTransactionBySystem(context.Context, *RqCreateTransactionBySystem) (*ResCreateTransactionBySystem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTransactionBySystem not implemented")
}

func RegisterTransactionsServicesServer(s *grpc.Server, srv TransactionsServicesServer) {
	s.RegisterService(&_TransactionsServices_serviceDesc, srv)
}

func _TransactionsServices_CreateTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestCreateTransaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionsServicesServer).CreateTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactions_proto.transactionsServices/CreateTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionsServicesServer).CreateTransaction(ctx, req.(*RequestCreateTransaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionsServices_GetTransactionByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionsServicesServer).GetTransactionByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactions_proto.transactionsServices/GetTransactionByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionsServicesServer).GetTransactionByID(ctx, req.(*GetTransactionByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionsServices_GetJWTTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JwtTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionsServicesServer).GetJWTTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactions_proto.transactionsServices/GetJWTTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionsServicesServer).GetJWTTransaction(ctx, req.(*JwtTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionsServices_GetAllTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllTransactionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionsServicesServer).GetAllTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactions_proto.transactionsServices/GetAllTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionsServicesServer).GetAllTransactions(ctx, req.(*GetAllTransactionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionsServices_GetFilesTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFilesByTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionsServicesServer).GetFilesTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactions_proto.transactionsServices/GetFilesTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionsServicesServer).GetFilesTransaction(ctx, req.(*GetFilesByTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionsServices_GetTransactionsByBlockId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RqGetTransactionByBlock)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionsServicesServer).GetTransactionsByBlockId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactions_proto.transactionsServices/GetTransactionsByBlockId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionsServicesServer).GetTransactionsByBlockId(ctx, req.(*RqGetTransactionByBlock))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionsServices_CreateTransactionBySystem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RqCreateTransactionBySystem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionsServicesServer).CreateTransactionBySystem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactions_proto.transactionsServices/CreateTransactionBySystem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionsServicesServer).CreateTransactionBySystem(ctx, req.(*RqCreateTransactionBySystem))
	}
	return interceptor(ctx, in, info, handler)
}

var _TransactionsServices_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transactions_proto.transactionsServices",
	HandlerType: (*TransactionsServicesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTransaction",
			Handler:    _TransactionsServices_CreateTransaction_Handler,
		},
		{
			MethodName: "GetTransactionByID",
			Handler:    _TransactionsServices_GetTransactionByID_Handler,
		},
		{
			MethodName: "GetJWTTransaction",
			Handler:    _TransactionsServices_GetJWTTransaction_Handler,
		},
		{
			MethodName: "GetAllTransactions",
			Handler:    _TransactionsServices_GetAllTransactions_Handler,
		},
		{
			MethodName: "GetFilesTransaction",
			Handler:    _TransactionsServices_GetFilesTransaction_Handler,
		},
		{
			MethodName: "GetTransactionsByBlockId",
			Handler:    _TransactionsServices_GetTransactionsByBlockId_Handler,
		},
		{
			MethodName: "CreateTransactionBySystem",
			Handler:    _TransactionsServices_CreateTransactionBySystem_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transactions.proto",
}
