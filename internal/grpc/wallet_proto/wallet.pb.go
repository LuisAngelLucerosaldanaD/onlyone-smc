// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: wallet.proto

package wallet_proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RequestCreateWallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RequestCreateWallet) Reset() {
	*x = RequestCreateWallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestCreateWallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestCreateWallet) ProtoMessage() {}

func (x *RequestCreateWallet) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestCreateWallet.ProtoReflect.Descriptor instead.
func (*RequestCreateWallet) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{0}
}

func (x *RequestCreateWallet) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ResponseCreateWallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error bool        `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  *DataWallet `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Code  int32       `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Type  int32       `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Msg   string      `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResponseCreateWallet) Reset() {
	*x = ResponseCreateWallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseCreateWallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseCreateWallet) ProtoMessage() {}

func (x *ResponseCreateWallet) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseCreateWallet.ProtoReflect.Descriptor instead.
func (*ResponseCreateWallet) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{1}
}

func (x *ResponseCreateWallet) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ResponseCreateWallet) GetData() *DataWallet {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ResponseCreateWallet) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResponseCreateWallet) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ResponseCreateWallet) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type DataWallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Mnemonic string `protobuf:"bytes,2,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
}

func (x *DataWallet) Reset() {
	*x = DataWallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataWallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataWallet) ProtoMessage() {}

func (x *DataWallet) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataWallet.ProtoReflect.Descriptor instead.
func (*DataWallet) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{2}
}

func (x *DataWallet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DataWallet) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

type RequestActivateWallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Mnemonic string `protobuf:"bytes,2,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
}

func (x *RequestActivateWallet) Reset() {
	*x = RequestActivateWallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestActivateWallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestActivateWallet) ProtoMessage() {}

func (x *RequestActivateWallet) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestActivateWallet.ProtoReflect.Descriptor instead.
func (*RequestActivateWallet) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{3}
}

func (x *RequestActivateWallet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RequestActivateWallet) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

type ResponseActivateWallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error bool    `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  *Wallet `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Code  int32   `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Type  int32   `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Msg   string  `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResponseActivateWallet) Reset() {
	*x = ResponseActivateWallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseActivateWallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseActivateWallet) ProtoMessage() {}

func (x *ResponseActivateWallet) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseActivateWallet.ProtoReflect.Descriptor instead.
func (*ResponseActivateWallet) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{4}
}

func (x *ResponseActivateWallet) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ResponseActivateWallet) GetData() *Wallet {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ResponseActivateWallet) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResponseActivateWallet) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ResponseActivateWallet) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type Wallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Mnemonic         string `protobuf:"bytes,2,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
	RsaPublic        string `protobuf:"bytes,3,opt,name=rsa_public,json=rsaPublic,proto3" json:"rsa_public,omitempty"`
	RsaPrivate       string `protobuf:"bytes,4,opt,name=rsa_private,json=rsaPrivate,proto3" json:"rsa_private,omitempty"`
	RsaPublicDevice  string `protobuf:"bytes,5,opt,name=rsa_public_device,json=rsaPublicDevice,proto3" json:"rsa_public_device,omitempty"`
	RsaPrivateDevice string `protobuf:"bytes,6,opt,name=rsa_private_device,json=rsaPrivateDevice,proto3" json:"rsa_private_device,omitempty"`
	IpDevice         string `protobuf:"bytes,7,opt,name=ip_device,json=ipDevice,proto3" json:"ip_device,omitempty"`
	StatusId         int32  `protobuf:"varint,8,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`
	IdentityNumber   string `protobuf:"bytes,9,opt,name=identity_number,json=identityNumber,proto3" json:"identity_number,omitempty"`
	CreatedAt        string `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        string `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Wallet) Reset() {
	*x = Wallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wallet) ProtoMessage() {}

func (x *Wallet) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wallet.ProtoReflect.Descriptor instead.
func (*Wallet) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{5}
}

func (x *Wallet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Wallet) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

func (x *Wallet) GetRsaPublic() string {
	if x != nil {
		return x.RsaPublic
	}
	return ""
}

func (x *Wallet) GetRsaPrivate() string {
	if x != nil {
		return x.RsaPrivate
	}
	return ""
}

func (x *Wallet) GetRsaPublicDevice() string {
	if x != nil {
		return x.RsaPublicDevice
	}
	return ""
}

func (x *Wallet) GetRsaPrivateDevice() string {
	if x != nil {
		return x.RsaPrivateDevice
	}
	return ""
}

func (x *Wallet) GetIpDevice() string {
	if x != nil {
		return x.IpDevice
	}
	return ""
}

func (x *Wallet) GetStatusId() int32 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

func (x *Wallet) GetIdentityNumber() string {
	if x != nil {
		return x.IdentityNumber
	}
	return ""
}

func (x *Wallet) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Wallet) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type RequestGetWalletById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RequestGetWalletById) Reset() {
	*x = RequestGetWalletById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGetWalletById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGetWalletById) ProtoMessage() {}

func (x *RequestGetWalletById) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGetWalletById.ProtoReflect.Descriptor instead.
func (*RequestGetWalletById) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{6}
}

func (x *RequestGetWalletById) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ResponseGetWalletById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error bool    `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  *Wallet `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Code  int32   `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Type  int32   `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Msg   string  `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResponseGetWalletById) Reset() {
	*x = ResponseGetWalletById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetWalletById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetWalletById) ProtoMessage() {}

func (x *ResponseGetWalletById) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetWalletById.ProtoReflect.Descriptor instead.
func (*ResponseGetWalletById) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{7}
}

func (x *ResponseGetWalletById) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ResponseGetWalletById) GetData() *Wallet {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ResponseGetWalletById) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResponseGetWalletById) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ResponseGetWalletById) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RequestGetWalletByUserId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RequestGetWalletByUserId) Reset() {
	*x = RequestGetWalletByUserId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGetWalletByUserId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGetWalletByUserId) ProtoMessage() {}

func (x *RequestGetWalletByUserId) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGetWalletByUserId.ProtoReflect.Descriptor instead.
func (*RequestGetWalletByUserId) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{8}
}

func (x *RequestGetWalletByUserId) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ResponseGetWalletByUserId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error bool      `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  []*Wallet `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	Code  int32     `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Type  int32     `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Msg   string    `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResponseGetWalletByUserId) Reset() {
	*x = ResponseGetWalletByUserId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetWalletByUserId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetWalletByUserId) ProtoMessage() {}

func (x *ResponseGetWalletByUserId) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetWalletByUserId.ProtoReflect.Descriptor instead.
func (*ResponseGetWalletByUserId) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{9}
}

func (x *ResponseGetWalletByUserId) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ResponseGetWalletByUserId) GetData() []*Wallet {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ResponseGetWalletByUserId) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResponseGetWalletByUserId) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ResponseGetWalletByUserId) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RqGetByIdentityNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityNumber string `protobuf:"bytes,1,opt,name=identity_number,json=identityNumber,proto3" json:"identity_number,omitempty"`
}

func (x *RqGetByIdentityNumber) Reset() {
	*x = RqGetByIdentityNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RqGetByIdentityNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RqGetByIdentityNumber) ProtoMessage() {}

func (x *RqGetByIdentityNumber) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RqGetByIdentityNumber.ProtoReflect.Descriptor instead.
func (*RqGetByIdentityNumber) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{10}
}

func (x *RqGetByIdentityNumber) GetIdentityNumber() string {
	if x != nil {
		return x.IdentityNumber
	}
	return ""
}

type ResponseGetByIdentityNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error bool    `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  *Wallet `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Code  int32   `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Type  int32   `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Msg   string  `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResponseGetByIdentityNumber) Reset() {
	*x = ResponseGetByIdentityNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetByIdentityNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetByIdentityNumber) ProtoMessage() {}

func (x *ResponseGetByIdentityNumber) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetByIdentityNumber.ProtoReflect.Descriptor instead.
func (*ResponseGetByIdentityNumber) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{11}
}

func (x *ResponseGetByIdentityNumber) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ResponseGetByIdentityNumber) GetData() *Wallet {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ResponseGetByIdentityNumber) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResponseGetByIdentityNumber) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ResponseGetByIdentityNumber) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RqCreateWalletBySystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityNumber string `protobuf:"bytes,1,opt,name=identity_number,json=identityNumber,proto3" json:"identity_number,omitempty"`
}

func (x *RqCreateWalletBySystem) Reset() {
	*x = RqCreateWalletBySystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RqCreateWalletBySystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RqCreateWalletBySystem) ProtoMessage() {}

func (x *RqCreateWalletBySystem) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RqCreateWalletBySystem.ProtoReflect.Descriptor instead.
func (*RqCreateWalletBySystem) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{12}
}

func (x *RqCreateWalletBySystem) GetIdentityNumber() string {
	if x != nil {
		return x.IdentityNumber
	}
	return ""
}

type ResponseCreateWalletBySystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error bool        `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  *DataWallet `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Code  int32       `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Type  int32       `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Msg   string      `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResponseCreateWalletBySystem) Reset() {
	*x = ResponseCreateWalletBySystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseCreateWalletBySystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseCreateWalletBySystem) ProtoMessage() {}

func (x *ResponseCreateWalletBySystem) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseCreateWalletBySystem.ProtoReflect.Descriptor instead.
func (*ResponseCreateWalletBySystem) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{13}
}

func (x *ResponseCreateWalletBySystem) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ResponseCreateWalletBySystem) GetData() *DataWallet {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ResponseCreateWalletBySystem) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResponseCreateWalletBySystem) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ResponseCreateWalletBySystem) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RqUpdateWallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RsaPublic        string `protobuf:"bytes,2,opt,name=rsa_public,json=rsaPublic,proto3" json:"rsa_public,omitempty"`
	RsaPrivate       string `protobuf:"bytes,3,opt,name=rsa_private,json=rsaPrivate,proto3" json:"rsa_private,omitempty"`
	RsaPublicDevice  string `protobuf:"bytes,4,opt,name=rsa_public_device,json=rsaPublicDevice,proto3" json:"rsa_public_device,omitempty"`
	RsaPrivateDevice string `protobuf:"bytes,5,opt,name=rsa_private_device,json=rsaPrivateDevice,proto3" json:"rsa_private_device,omitempty"`
	IpDevice         string `protobuf:"bytes,6,opt,name=ip_device,json=ipDevice,proto3" json:"ip_device,omitempty"`
	IdentityNumber   string `protobuf:"bytes,7,opt,name=identity_number,json=identityNumber,proto3" json:"identity_number,omitempty"`
	StatusId         int32  `protobuf:"varint,8,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`
}

func (x *RqUpdateWallet) Reset() {
	*x = RqUpdateWallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RqUpdateWallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RqUpdateWallet) ProtoMessage() {}

func (x *RqUpdateWallet) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RqUpdateWallet.ProtoReflect.Descriptor instead.
func (*RqUpdateWallet) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{14}
}

func (x *RqUpdateWallet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RqUpdateWallet) GetRsaPublic() string {
	if x != nil {
		return x.RsaPublic
	}
	return ""
}

func (x *RqUpdateWallet) GetRsaPrivate() string {
	if x != nil {
		return x.RsaPrivate
	}
	return ""
}

func (x *RqUpdateWallet) GetRsaPublicDevice() string {
	if x != nil {
		return x.RsaPublicDevice
	}
	return ""
}

func (x *RqUpdateWallet) GetRsaPrivateDevice() string {
	if x != nil {
		return x.RsaPrivateDevice
	}
	return ""
}

func (x *RqUpdateWallet) GetIpDevice() string {
	if x != nil {
		return x.IpDevice
	}
	return ""
}

func (x *RqUpdateWallet) GetIdentityNumber() string {
	if x != nil {
		return x.IdentityNumber
	}
	return ""
}

func (x *RqUpdateWallet) GetStatusId() int32 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

type ResUpdateWallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error bool        `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  *DataWallet `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Code  int32       `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Type  int32       `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Msg   string      `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResUpdateWallet) Reset() {
	*x = ResUpdateWallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResUpdateWallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResUpdateWallet) ProtoMessage() {}

func (x *ResUpdateWallet) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResUpdateWallet.ProtoReflect.Descriptor instead.
func (*ResUpdateWallet) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{15}
}

func (x *ResUpdateWallet) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ResUpdateWallet) GetData() *DataWallet {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ResUpdateWallet) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResUpdateWallet) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ResUpdateWallet) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RqFrozenMoney struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletId  string `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Amount    int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	LotteryId string `protobuf:"bytes,3,opt,name=lottery_id,json=lotteryId,proto3" json:"lottery_id,omitempty"`
}

func (x *RqFrozenMoney) Reset() {
	*x = RqFrozenMoney{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RqFrozenMoney) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RqFrozenMoney) ProtoMessage() {}

func (x *RqFrozenMoney) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RqFrozenMoney.ProtoReflect.Descriptor instead.
func (*RqFrozenMoney) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{16}
}

func (x *RqFrozenMoney) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *RqFrozenMoney) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *RqFrozenMoney) GetLotteryId() string {
	if x != nil {
		return x.LotteryId
	}
	return ""
}

type ResFrozenMoney struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Code  int32  `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Type  int32  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Msg   string `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResFrozenMoney) Reset() {
	*x = ResFrozenMoney{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFrozenMoney) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFrozenMoney) ProtoMessage() {}

func (x *ResFrozenMoney) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFrozenMoney.ProtoReflect.Descriptor instead.
func (*ResFrozenMoney) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{17}
}

func (x *ResFrozenMoney) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ResFrozenMoney) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *ResFrozenMoney) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResFrozenMoney) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ResFrozenMoney) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RqUnFreezeMoney struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletId  string  `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	LotteryId string  `protobuf:"bytes,2,opt,name=lottery_id,json=lotteryId,proto3" json:"lottery_id,omitempty"`
	Penalty   float64 `protobuf:"fixed64,3,opt,name=penalty,proto3" json:"penalty,omitempty"`
}

func (x *RqUnFreezeMoney) Reset() {
	*x = RqUnFreezeMoney{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RqUnFreezeMoney) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RqUnFreezeMoney) ProtoMessage() {}

func (x *RqUnFreezeMoney) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RqUnFreezeMoney.ProtoReflect.Descriptor instead.
func (*RqUnFreezeMoney) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{18}
}

func (x *RqUnFreezeMoney) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *RqUnFreezeMoney) GetLotteryId() string {
	if x != nil {
		return x.LotteryId
	}
	return ""
}

func (x *RqUnFreezeMoney) GetPenalty() float64 {
	if x != nil {
		return x.Penalty
	}
	return 0
}

type ResUnFreezeMoney struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Code  int32  `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Type  int32  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Msg   string `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResUnFreezeMoney) Reset() {
	*x = ResUnFreezeMoney{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResUnFreezeMoney) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResUnFreezeMoney) ProtoMessage() {}

func (x *ResUnFreezeMoney) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResUnFreezeMoney.ProtoReflect.Descriptor instead.
func (*ResUnFreezeMoney) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{19}
}

func (x *ResUnFreezeMoney) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ResUnFreezeMoney) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *ResUnFreezeMoney) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResUnFreezeMoney) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ResUnFreezeMoney) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RqGetFrozenMoney struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletId string `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
}

func (x *RqGetFrozenMoney) Reset() {
	*x = RqGetFrozenMoney{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RqGetFrozenMoney) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RqGetFrozenMoney) ProtoMessage() {}

func (x *RqGetFrozenMoney) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RqGetFrozenMoney.ProtoReflect.Descriptor instead.
func (*RqGetFrozenMoney) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{20}
}

func (x *RqGetFrozenMoney) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

type ResGetFrozenMoney struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  int64  `protobuf:"varint,2,opt,name=data,proto3" json:"data,omitempty"`
	Code  int32  `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Type  int32  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Msg   string `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResGetFrozenMoney) Reset() {
	*x = ResGetFrozenMoney{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetFrozenMoney) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetFrozenMoney) ProtoMessage() {}

func (x *ResGetFrozenMoney) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetFrozenMoney.ProtoReflect.Descriptor instead.
func (*ResGetFrozenMoney) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{21}
}

func (x *ResGetFrozenMoney) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ResGetFrozenMoney) GetData() int64 {
	if x != nil {
		return x.Data
	}
	return 0
}

func (x *ResGetFrozenMoney) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResGetFrozenMoney) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ResGetFrozenMoney) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_wallet_proto protoreflect.FileDescriptor

var file_wallet_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2e, 0x0a, 0x13,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x94, 0x01, 0x0a,
	0x14, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x22, 0x38, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x22, 0x43, 0x0a,
	0x15, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e,
	0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e,
	0x69, 0x63, 0x22, 0x92, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xef, 0x02, 0x0a, 0x06, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x73, 0x61, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x73, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x73, 0x61, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x73, 0x61, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x72, 0x73, 0x61, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x73, 0x61, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x73,
	0x61, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x73, 0x61, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x70, 0x5f, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x70, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x26, 0x0a, 0x14, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x91, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65,
	0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x33, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x19, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x28,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x40, 0x0a, 0x15, 0x52, 0x71, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x22, 0x97, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x41,
	0x0a, 0x16, 0x52, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x42, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0x9c, 0x01, 0x0a, 0x1c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x79, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x9d, 0x02, 0x0a, 0x0e, 0x52, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x73, 0x61, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x73, 0x61, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x73, 0x61, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x73, 0x61, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x73, 0x61, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x72, 0x73, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x2c, 0x0a, 0x12, 0x72, 0x73, 0x61, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x73, 0x61,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x70, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x70, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64,
	0x22, 0x8f, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x63, 0x0a, 0x0d, 0x52, 0x71, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x74, 0x74,
	0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f,
	0x74, 0x74, 0x65, 0x72, 0x79, 0x49, 0x64, 0x22, 0x74, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x46, 0x72,
	0x6f, 0x7a, 0x65, 0x6e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x67, 0x0a,
	0x0f, 0x52, 0x71, 0x55, 0x6e, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70,
	0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x22, 0x76, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x55, 0x6e, 0x46,
	0x72, 0x65, 0x65, 0x7a, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x2f,
	0x0a, 0x10, 0x52, 0x71, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x22,
	0x77, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x32, 0xaf, 0x07, 0x0a, 0x14, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x12, 0x57, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x12, 0x21, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x1a, 0x22, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x23, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x1a, 0x24, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x22, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x23,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42,
	0x79, 0x49, 0x64, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x1a, 0x27, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x00, 0x12, 0x6d, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x71, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a,
	0x29, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x79, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x12, 0x24, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x42, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x1a, 0x2a, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x79,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x1c, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x1a, 0x1d, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0b, 0x46, 0x72, 0x6f, 0x7a, 0x65,
	0x6e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1b, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x71, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x1a, 0x1c, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x4d, 0x6f, 0x6e, 0x65,
	0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x55, 0x6e, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1d, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x71, 0x55, 0x6e, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x1a, 0x1e, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73, 0x55, 0x6e, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x7a,
	0x65, 0x6e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1e, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x71, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x7a,
	0x65, 0x6e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x1a, 0x1f, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f,
	0x7a, 0x65, 0x6e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0x00, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x2f,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wallet_proto_rawDescOnce sync.Once
	file_wallet_proto_rawDescData = file_wallet_proto_rawDesc
)

func file_wallet_proto_rawDescGZIP() []byte {
	file_wallet_proto_rawDescOnce.Do(func() {
		file_wallet_proto_rawDescData = protoimpl.X.CompressGZIP(file_wallet_proto_rawDescData)
	})
	return file_wallet_proto_rawDescData
}

var file_wallet_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_wallet_proto_goTypes = []interface{}{
	(*RequestCreateWallet)(nil),          // 0: wallet_proto.RequestCreateWallet
	(*ResponseCreateWallet)(nil),         // 1: wallet_proto.ResponseCreateWallet
	(*DataWallet)(nil),                   // 2: wallet_proto.DataWallet
	(*RequestActivateWallet)(nil),        // 3: wallet_proto.RequestActivateWallet
	(*ResponseActivateWallet)(nil),       // 4: wallet_proto.ResponseActivateWallet
	(*Wallet)(nil),                       // 5: wallet_proto.Wallet
	(*RequestGetWalletById)(nil),         // 6: wallet_proto.RequestGetWalletById
	(*ResponseGetWalletById)(nil),        // 7: wallet_proto.ResponseGetWalletById
	(*RequestGetWalletByUserId)(nil),     // 8: wallet_proto.RequestGetWalletByUserId
	(*ResponseGetWalletByUserId)(nil),    // 9: wallet_proto.ResponseGetWalletByUserId
	(*RqGetByIdentityNumber)(nil),        // 10: wallet_proto.RqGetByIdentityNumber
	(*ResponseGetByIdentityNumber)(nil),  // 11: wallet_proto.ResponseGetByIdentityNumber
	(*RqCreateWalletBySystem)(nil),       // 12: wallet_proto.RqCreateWalletBySystem
	(*ResponseCreateWalletBySystem)(nil), // 13: wallet_proto.ResponseCreateWalletBySystem
	(*RqUpdateWallet)(nil),               // 14: wallet_proto.RqUpdateWallet
	(*ResUpdateWallet)(nil),              // 15: wallet_proto.ResUpdateWallet
	(*RqFrozenMoney)(nil),                // 16: wallet_proto.RqFrozenMoney
	(*ResFrozenMoney)(nil),               // 17: wallet_proto.resFrozenMoney
	(*RqUnFreezeMoney)(nil),              // 18: wallet_proto.RqUnFreezeMoney
	(*ResUnFreezeMoney)(nil),             // 19: wallet_proto.resUnFreezeMoney
	(*RqGetFrozenMoney)(nil),             // 20: wallet_proto.RqGetFrozenMoney
	(*ResGetFrozenMoney)(nil),            // 21: wallet_proto.resGetFrozenMoney
}
var file_wallet_proto_depIdxs = []int32{
	2,  // 0: wallet_proto.ResponseCreateWallet.data:type_name -> wallet_proto.DataWallet
	5,  // 1: wallet_proto.ResponseActivateWallet.data:type_name -> wallet_proto.Wallet
	5,  // 2: wallet_proto.ResponseGetWalletById.data:type_name -> wallet_proto.Wallet
	5,  // 3: wallet_proto.ResponseGetWalletByUserId.data:type_name -> wallet_proto.Wallet
	5,  // 4: wallet_proto.ResponseGetByIdentityNumber.data:type_name -> wallet_proto.Wallet
	2,  // 5: wallet_proto.ResponseCreateWalletBySystem.data:type_name -> wallet_proto.DataWallet
	2,  // 6: wallet_proto.ResUpdateWallet.data:type_name -> wallet_proto.DataWallet
	0,  // 7: wallet_proto.walletServicesWallet.CreateWallet:input_type -> wallet_proto.RequestCreateWallet
	3,  // 8: wallet_proto.walletServicesWallet.ActivateWallet:input_type -> wallet_proto.RequestActivateWallet
	6,  // 9: wallet_proto.walletServicesWallet.GetWalletById:input_type -> wallet_proto.RequestGetWalletById
	8,  // 10: wallet_proto.walletServicesWallet.GetWalletByUserId:input_type -> wallet_proto.RequestGetWalletByUserId
	10, // 11: wallet_proto.walletServicesWallet.GetWalletByIdentityNumber:input_type -> wallet_proto.RqGetByIdentityNumber
	12, // 12: wallet_proto.walletServicesWallet.CreateWalletBySystem:input_type -> wallet_proto.RqCreateWalletBySystem
	14, // 13: wallet_proto.walletServicesWallet.UpdateWallet:input_type -> wallet_proto.RqUpdateWallet
	16, // 14: wallet_proto.walletServicesWallet.FrozenMoney:input_type -> wallet_proto.RqFrozenMoney
	18, // 15: wallet_proto.walletServicesWallet.UnFreezeMoney:input_type -> wallet_proto.RqUnFreezeMoney
	20, // 16: wallet_proto.walletServicesWallet.GetFrozenMoney:input_type -> wallet_proto.RqGetFrozenMoney
	1,  // 17: wallet_proto.walletServicesWallet.CreateWallet:output_type -> wallet_proto.ResponseCreateWallet
	4,  // 18: wallet_proto.walletServicesWallet.ActivateWallet:output_type -> wallet_proto.ResponseActivateWallet
	7,  // 19: wallet_proto.walletServicesWallet.GetWalletById:output_type -> wallet_proto.ResponseGetWalletById
	9,  // 20: wallet_proto.walletServicesWallet.GetWalletByUserId:output_type -> wallet_proto.ResponseGetWalletByUserId
	11, // 21: wallet_proto.walletServicesWallet.GetWalletByIdentityNumber:output_type -> wallet_proto.ResponseGetByIdentityNumber
	13, // 22: wallet_proto.walletServicesWallet.CreateWalletBySystem:output_type -> wallet_proto.ResponseCreateWalletBySystem
	15, // 23: wallet_proto.walletServicesWallet.UpdateWallet:output_type -> wallet_proto.ResUpdateWallet
	17, // 24: wallet_proto.walletServicesWallet.FrozenMoney:output_type -> wallet_proto.resFrozenMoney
	19, // 25: wallet_proto.walletServicesWallet.UnFreezeMoney:output_type -> wallet_proto.resUnFreezeMoney
	21, // 26: wallet_proto.walletServicesWallet.GetFrozenMoney:output_type -> wallet_proto.resGetFrozenMoney
	17, // [17:27] is the sub-list for method output_type
	7,  // [7:17] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_wallet_proto_init() }
func file_wallet_proto_init() {
	if File_wallet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wallet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestCreateWallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseCreateWallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataWallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestActivateWallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseActivateWallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Wallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGetWalletById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetWalletById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGetWalletByUserId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetWalletByUserId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RqGetByIdentityNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetByIdentityNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RqCreateWalletBySystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseCreateWalletBySystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RqUpdateWallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResUpdateWallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RqFrozenMoney); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFrozenMoney); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RqUnFreezeMoney); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResUnFreezeMoney); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RqGetFrozenMoney); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGetFrozenMoney); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wallet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wallet_proto_goTypes,
		DependencyIndexes: file_wallet_proto_depIdxs,
		MessageInfos:      file_wallet_proto_msgTypes,
	}.Build()
	File_wallet_proto = out.File
	file_wallet_proto_rawDesc = nil
	file_wallet_proto_goTypes = nil
	file_wallet_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WalletServicesWalletClient is the client API for WalletServicesWallet service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WalletServicesWalletClient interface {
	CreateWallet(ctx context.Context, in *RequestCreateWallet, opts ...grpc.CallOption) (*ResponseCreateWallet, error)
	ActivateWallet(ctx context.Context, in *RequestActivateWallet, opts ...grpc.CallOption) (*ResponseActivateWallet, error)
	GetWalletById(ctx context.Context, in *RequestGetWalletById, opts ...grpc.CallOption) (*ResponseGetWalletById, error)
	GetWalletByUserId(ctx context.Context, in *RequestGetWalletByUserId, opts ...grpc.CallOption) (*ResponseGetWalletByUserId, error)
	GetWalletByIdentityNumber(ctx context.Context, in *RqGetByIdentityNumber, opts ...grpc.CallOption) (*ResponseGetByIdentityNumber, error)
	CreateWalletBySystem(ctx context.Context, in *RqCreateWalletBySystem, opts ...grpc.CallOption) (*ResponseCreateWalletBySystem, error)
	UpdateWallet(ctx context.Context, in *RqUpdateWallet, opts ...grpc.CallOption) (*ResUpdateWallet, error)
	FrozenMoney(ctx context.Context, in *RqFrozenMoney, opts ...grpc.CallOption) (*ResFrozenMoney, error)
	UnFreezeMoney(ctx context.Context, in *RqUnFreezeMoney, opts ...grpc.CallOption) (*ResUnFreezeMoney, error)
	GetFrozenMoney(ctx context.Context, in *RqGetFrozenMoney, opts ...grpc.CallOption) (*ResGetFrozenMoney, error)
}

type walletServicesWalletClient struct {
	cc grpc.ClientConnInterface
}

func NewWalletServicesWalletClient(cc grpc.ClientConnInterface) WalletServicesWalletClient {
	return &walletServicesWalletClient{cc}
}

func (c *walletServicesWalletClient) CreateWallet(ctx context.Context, in *RequestCreateWallet, opts ...grpc.CallOption) (*ResponseCreateWallet, error) {
	out := new(ResponseCreateWallet)
	err := c.cc.Invoke(ctx, "/wallet_proto.walletServicesWallet/CreateWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServicesWalletClient) ActivateWallet(ctx context.Context, in *RequestActivateWallet, opts ...grpc.CallOption) (*ResponseActivateWallet, error) {
	out := new(ResponseActivateWallet)
	err := c.cc.Invoke(ctx, "/wallet_proto.walletServicesWallet/ActivateWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServicesWalletClient) GetWalletById(ctx context.Context, in *RequestGetWalletById, opts ...grpc.CallOption) (*ResponseGetWalletById, error) {
	out := new(ResponseGetWalletById)
	err := c.cc.Invoke(ctx, "/wallet_proto.walletServicesWallet/GetWalletById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServicesWalletClient) GetWalletByUserId(ctx context.Context, in *RequestGetWalletByUserId, opts ...grpc.CallOption) (*ResponseGetWalletByUserId, error) {
	out := new(ResponseGetWalletByUserId)
	err := c.cc.Invoke(ctx, "/wallet_proto.walletServicesWallet/GetWalletByUserId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServicesWalletClient) GetWalletByIdentityNumber(ctx context.Context, in *RqGetByIdentityNumber, opts ...grpc.CallOption) (*ResponseGetByIdentityNumber, error) {
	out := new(ResponseGetByIdentityNumber)
	err := c.cc.Invoke(ctx, "/wallet_proto.walletServicesWallet/GetWalletByIdentityNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServicesWalletClient) CreateWalletBySystem(ctx context.Context, in *RqCreateWalletBySystem, opts ...grpc.CallOption) (*ResponseCreateWalletBySystem, error) {
	out := new(ResponseCreateWalletBySystem)
	err := c.cc.Invoke(ctx, "/wallet_proto.walletServicesWallet/CreateWalletBySystem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServicesWalletClient) UpdateWallet(ctx context.Context, in *RqUpdateWallet, opts ...grpc.CallOption) (*ResUpdateWallet, error) {
	out := new(ResUpdateWallet)
	err := c.cc.Invoke(ctx, "/wallet_proto.walletServicesWallet/UpdateWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServicesWalletClient) FrozenMoney(ctx context.Context, in *RqFrozenMoney, opts ...grpc.CallOption) (*ResFrozenMoney, error) {
	out := new(ResFrozenMoney)
	err := c.cc.Invoke(ctx, "/wallet_proto.walletServicesWallet/FrozenMoney", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServicesWalletClient) UnFreezeMoney(ctx context.Context, in *RqUnFreezeMoney, opts ...grpc.CallOption) (*ResUnFreezeMoney, error) {
	out := new(ResUnFreezeMoney)
	err := c.cc.Invoke(ctx, "/wallet_proto.walletServicesWallet/UnFreezeMoney", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServicesWalletClient) GetFrozenMoney(ctx context.Context, in *RqGetFrozenMoney, opts ...grpc.CallOption) (*ResGetFrozenMoney, error) {
	out := new(ResGetFrozenMoney)
	err := c.cc.Invoke(ctx, "/wallet_proto.walletServicesWallet/GetFrozenMoney", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WalletServicesWalletServer is the server API for WalletServicesWallet service.
type WalletServicesWalletServer interface {
	CreateWallet(context.Context, *RequestCreateWallet) (*ResponseCreateWallet, error)
	ActivateWallet(context.Context, *RequestActivateWallet) (*ResponseActivateWallet, error)
	GetWalletById(context.Context, *RequestGetWalletById) (*ResponseGetWalletById, error)
	GetWalletByUserId(context.Context, *RequestGetWalletByUserId) (*ResponseGetWalletByUserId, error)
	GetWalletByIdentityNumber(context.Context, *RqGetByIdentityNumber) (*ResponseGetByIdentityNumber, error)
	CreateWalletBySystem(context.Context, *RqCreateWalletBySystem) (*ResponseCreateWalletBySystem, error)
	UpdateWallet(context.Context, *RqUpdateWallet) (*ResUpdateWallet, error)
	FrozenMoney(context.Context, *RqFrozenMoney) (*ResFrozenMoney, error)
	UnFreezeMoney(context.Context, *RqUnFreezeMoney) (*ResUnFreezeMoney, error)
	GetFrozenMoney(context.Context, *RqGetFrozenMoney) (*ResGetFrozenMoney, error)
}

// UnimplementedWalletServicesWalletServer can be embedded to have forward compatible implementations.
type UnimplementedWalletServicesWalletServer struct {
}

func (*UnimplementedWalletServicesWalletServer) CreateWallet(context.Context, *RequestCreateWallet) (*ResponseCreateWallet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWallet not implemented")
}
func (*UnimplementedWalletServicesWalletServer) ActivateWallet(context.Context, *RequestActivateWallet) (*ResponseActivateWallet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActivateWallet not implemented")
}
func (*UnimplementedWalletServicesWalletServer) GetWalletById(context.Context, *RequestGetWalletById) (*ResponseGetWalletById, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWalletById not implemented")
}
func (*UnimplementedWalletServicesWalletServer) GetWalletByUserId(context.Context, *RequestGetWalletByUserId) (*ResponseGetWalletByUserId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWalletByUserId not implemented")
}
func (*UnimplementedWalletServicesWalletServer) GetWalletByIdentityNumber(context.Context, *RqGetByIdentityNumber) (*ResponseGetByIdentityNumber, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWalletByIdentityNumber not implemented")
}
func (*UnimplementedWalletServicesWalletServer) CreateWalletBySystem(context.Context, *RqCreateWalletBySystem) (*ResponseCreateWalletBySystem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWalletBySystem not implemented")
}
func (*UnimplementedWalletServicesWalletServer) UpdateWallet(context.Context, *RqUpdateWallet) (*ResUpdateWallet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateWallet not implemented")
}
func (*UnimplementedWalletServicesWalletServer) FrozenMoney(context.Context, *RqFrozenMoney) (*ResFrozenMoney, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FrozenMoney not implemented")
}
func (*UnimplementedWalletServicesWalletServer) UnFreezeMoney(context.Context, *RqUnFreezeMoney) (*ResUnFreezeMoney, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnFreezeMoney not implemented")
}
func (*UnimplementedWalletServicesWalletServer) GetFrozenMoney(context.Context, *RqGetFrozenMoney) (*ResGetFrozenMoney, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFrozenMoney not implemented")
}

func RegisterWalletServicesWalletServer(s *grpc.Server, srv WalletServicesWalletServer) {
	s.RegisterService(&_WalletServicesWallet_serviceDesc, srv)
}

func _WalletServicesWallet_CreateWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestCreateWallet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServicesWalletServer).CreateWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wallet_proto.walletServicesWallet/CreateWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServicesWalletServer).CreateWallet(ctx, req.(*RequestCreateWallet))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletServicesWallet_ActivateWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestActivateWallet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServicesWalletServer).ActivateWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wallet_proto.walletServicesWallet/ActivateWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServicesWalletServer).ActivateWallet(ctx, req.(*RequestActivateWallet))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletServicesWallet_GetWalletById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestGetWalletById)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServicesWalletServer).GetWalletById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wallet_proto.walletServicesWallet/GetWalletById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServicesWalletServer).GetWalletById(ctx, req.(*RequestGetWalletById))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletServicesWallet_GetWalletByUserId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestGetWalletByUserId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServicesWalletServer).GetWalletByUserId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wallet_proto.walletServicesWallet/GetWalletByUserId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServicesWalletServer).GetWalletByUserId(ctx, req.(*RequestGetWalletByUserId))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletServicesWallet_GetWalletByIdentityNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RqGetByIdentityNumber)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServicesWalletServer).GetWalletByIdentityNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wallet_proto.walletServicesWallet/GetWalletByIdentityNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServicesWalletServer).GetWalletByIdentityNumber(ctx, req.(*RqGetByIdentityNumber))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletServicesWallet_CreateWalletBySystem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RqCreateWalletBySystem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServicesWalletServer).CreateWalletBySystem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wallet_proto.walletServicesWallet/CreateWalletBySystem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServicesWalletServer).CreateWalletBySystem(ctx, req.(*RqCreateWalletBySystem))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletServicesWallet_UpdateWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RqUpdateWallet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServicesWalletServer).UpdateWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wallet_proto.walletServicesWallet/UpdateWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServicesWalletServer).UpdateWallet(ctx, req.(*RqUpdateWallet))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletServicesWallet_FrozenMoney_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RqFrozenMoney)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServicesWalletServer).FrozenMoney(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wallet_proto.walletServicesWallet/FrozenMoney",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServicesWalletServer).FrozenMoney(ctx, req.(*RqFrozenMoney))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletServicesWallet_UnFreezeMoney_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RqUnFreezeMoney)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServicesWalletServer).UnFreezeMoney(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wallet_proto.walletServicesWallet/UnFreezeMoney",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServicesWalletServer).UnFreezeMoney(ctx, req.(*RqUnFreezeMoney))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletServicesWallet_GetFrozenMoney_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RqGetFrozenMoney)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServicesWalletServer).GetFrozenMoney(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wallet_proto.walletServicesWallet/GetFrozenMoney",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServicesWalletServer).GetFrozenMoney(ctx, req.(*RqGetFrozenMoney))
	}
	return interceptor(ctx, in, info, handler)
}

var _WalletServicesWallet_serviceDesc = grpc.ServiceDesc{
	ServiceName: "wallet_proto.walletServicesWallet",
	HandlerType: (*WalletServicesWalletServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateWallet",
			Handler:    _WalletServicesWallet_CreateWallet_Handler,
		},
		{
			MethodName: "ActivateWallet",
			Handler:    _WalletServicesWallet_ActivateWallet_Handler,
		},
		{
			MethodName: "GetWalletById",
			Handler:    _WalletServicesWallet_GetWalletById_Handler,
		},
		{
			MethodName: "GetWalletByUserId",
			Handler:    _WalletServicesWallet_GetWalletByUserId_Handler,
		},
		{
			MethodName: "GetWalletByIdentityNumber",
			Handler:    _WalletServicesWallet_GetWalletByIdentityNumber_Handler,
		},
		{
			MethodName: "CreateWalletBySystem",
			Handler:    _WalletServicesWallet_CreateWalletBySystem_Handler,
		},
		{
			MethodName: "UpdateWallet",
			Handler:    _WalletServicesWallet_UpdateWallet_Handler,
		},
		{
			MethodName: "FrozenMoney",
			Handler:    _WalletServicesWallet_FrozenMoney_Handler,
		},
		{
			MethodName: "UnFreezeMoney",
			Handler:    _WalletServicesWallet_UnFreezeMoney_Handler,
		},
		{
			MethodName: "GetFrozenMoney",
			Handler:    _WalletServicesWallet_GetFrozenMoney_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "wallet.proto",
}
